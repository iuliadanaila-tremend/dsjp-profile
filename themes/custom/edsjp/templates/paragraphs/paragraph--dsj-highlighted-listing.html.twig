{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 *
 * Custom paragraph template for Dsj Highlighted Listing.
 */
#}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished',
  content.field_dsj_image | render ? 'paragraph-banner-background',
  content.field_dsj_title | render ? 'has-title',
]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      <div class="ecl-container">
        <div class="ecl-row">
          <div class="ecl-col-xl-12">
            <div class="ecl-row">
              <div class="ecl-col-m-12 listing-header">
                <h2 class="ecl-u-type-heading-2">
                  {{ content.field_dsj_title }}
                </h2>
                {% if content.field_dsj_see_more_link | render %}
                  <div class="listing-more-link">
                    {{ content.field_dsj_see_more_link }}
                  </div>
                {% endif %}
              </div>
            </div>
            {{ content.field_dsj_featured_content }}
            <div class="ecl-row dsj-skills-cards">
              {{ content | without('field_dsj_featured_content', 'field_dsj_title', 'field_dsj_see_more_link', 'field_dsj_image') }}
            </div>
            {% if content.field_dsj_see_more_link | render %}
              <div class="hidden-desktop listing-more-link">
                {{ content.field_dsj_see_more_link }}
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
